name: Track Positions and Deploy

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes (minimum for GitHub)
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  track-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Cache TypeScript build
      id: cache-dist
      uses: actions/cache@v4
      with:
        path: dist
        key: ${{ runner.os }}-tsc-v2-${{ hashFiles('src/**/*.ts', 'tsconfig.json') }}
    
    # Restore previous data from the repository
    - name: Restore previous position data
      run: |
        mkdir -p data
        # Try to get the file from the repository's main branch
        git fetch origin main
        git show origin/main:data/positions.json > data/positions.json 2>/dev/null || echo "[]" > data/positions.json
        echo "Restored $(cat data/positions.json | jq '. | length') historical entries"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      if: steps.cache-dist.outputs.cache-hit != 'true'
      run: npm run build
    
    - name: Run position tracker
      env:
        WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
        GRAPH_API_KEY: ${{ secrets.GRAPH_API_KEY }}
        POSITION_ID: ${{ secrets.POSITION_ID }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        DATA_FILE_PATH: ./data/positions.json
      run: |
        mkdir -p data
        # Initialize empty JSON if Supabase not configured
        echo "[]" > data/positions.json
        npm run start:once
    
    - name: Upload data artifacts
      uses: actions/upload-artifact@v4
      with:
        name: position-data
        path: |
          data/positions.json
          docs/index.html
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
    
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: track-and-build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4